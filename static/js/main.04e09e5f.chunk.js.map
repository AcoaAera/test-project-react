{"version":3,"sources":["dictionary.js","localStorage.js","storeMobx/allUser.js","components/TextInput.jsx","components/SelectList.jsx","components/DateInput.jsx","components/RadioInput.jsx","components/CheckInput.jsx","components/MultiSelectCheckbox.jsx","pages/AddUser.jsx","pages/AllUser.jsx","pages/EditUser.jsx","pages/Page404.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["positions","id","name","gender","nameEng","getPosinionById","pos","find","el","Number","Boolean","getGenderById","gen","USERS","pushUsersToLocalstorage","users","localStorage","setItem","JSON","stringify","getUsersToLocalstorage","parse","getItem","count","makeAutoObservable","this","user","push","map","forEach","colleagues","includes","splice","indexOf","filter","i","length","key","label","surname","arrId","String","TextInput","props","myInput","event","updateData","target","value","state","className","nameField","type","onChange","defaultValue","invalid","React","Component","SelectList","listOisitions2","disabled","DateInput","RadioInput","listOisitions","checked","htmlFor","CheckInput","MultiSelectCheckbox","placeholder","selectDeselectLabel","options","selected","buttonClass","handleOnChange","AddUser","insertUser","document","querySelectorAll","n","classList","remove","validateFields","allUser","infoUser","history","setState","prevState","patronymic","position","dateOfBirth","dateEmployment","dateOfDismissal","drivingLicence","infoUser2","array","newId","isGoodId","Math","round","random","isGood","validateName","validateSurname","validatePosition","validateDateOfBirth","validateGender","validateDateEmployment","validateDateOfDismissal","setIsInvalid","getElementById","add","createNewId","setInfoUserId","getUserAsKeyLabel","onClick","AllUser","viewColleagues","arr","getUsersByIds","role","delUser","scope","observer","EditUser","updateUser","location","getUserById","getUserAsKeyLabelNotMyself","multiSelect","App","to","data-toggle","data-target","exact","path","component","Page404","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.04e09e5f.chunk.js","sourcesContent":["export const positions = [{\r\n        id: 1,\r\n        name: \"Менеджер\"\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Пилот\"\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Программист\"\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Генеральный директор\"\r\n    },\r\n    {\r\n        id: 5,\r\n        name: \"Аналитик\"\r\n    }\r\n]\r\n\r\nexport const gender = [{\r\n        id: 1,\r\n        name: \"Мужской\",\r\n        nameEng: \"male\"\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Женский\",\r\n        nameEng: \"female\"\r\n    },\r\n]\r\n\r\n// Получить name должности по id\r\nexport function getPosinionById(id) {\r\n    let pos = positions.find((el) => el.id === Number(id))\r\n    return Boolean(pos) ? pos.name : null\r\n}\r\n\r\n// Получить name гендера по id\r\nexport function getGenderById(id) {\r\n    let gen = gender.find((el) => el.id === Number(id))\r\n    return Boolean(gen) ? gen.name : null\r\n}","const USERS = 'USER'\r\n\r\nexport const pushUsersToLocalstorage = (users) => {\r\n    localStorage.setItem(USERS, JSON.stringify(users))\r\n}\r\n\r\nexport const getUsersToLocalstorage = () => {\r\n    return JSON.parse(localStorage.getItem(USERS))\r\n}","import {\r\n    makeAutoObservable\r\n} from \"mobx\"\r\nimport {\r\n    pushUsersToLocalstorage,\r\n    getUsersToLocalstorage\r\n} from '../localStorage.js'\r\n\r\nclass allUser {\r\n    count = 0\r\n    users = []\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n        this.users = Boolean(getUsersToLocalstorage()) ? getUsersToLocalstorage() : []\r\n    }\r\n\r\n    /**\r\n     * Добавить пользователя\r\n     * @param {*} user \r\n     */\r\n    insertUser(user) {\r\n        this.users.push(user)\r\n        pushUsersToLocalstorage(this.users)\r\n    }\r\n\r\n    /**\r\n     * Обновить данные пользователя\r\n     * @param {*} user \r\n     */\r\n    updateUser(user) {\r\n        this.users = this.users.map(el => el.id === user.id ? user : el)\r\n        pushUsersToLocalstorage(this.users)\r\n    }\r\n\r\n    /**\r\n     * Удалить пользователя из списка и почистить список коллег\r\n     * @param {*} id \r\n     */\r\n    delUser(id) {\r\n        this.users.forEach((el) => {\r\n            let colleagues = el.colleagues\r\n            el = colleagues.includes(id) ? colleagues.splice(colleagues.indexOf(id), 1) : el\r\n        })\r\n        this.users = this.users.filter(user => user.id !== id)\r\n        pushUsersToLocalstorage(this.users)\r\n    }\r\n\r\n    /**\r\n     * Получить пользователя по id\r\n     * @param {*} id \r\n     * @returns \r\n     */\r\n    getUserById(id) {\r\n        for (let i = 0; i < this.users.length; i++) {\r\n            const el = this.users[i]\r\n            if (el.id === id) {\r\n                return el\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Получить массив всех пользователей в формате {key: .. , label: ..}\r\n     * @returns {Array}\r\n     */\r\n    getUserAsKeyLabel() {\r\n        return this.users.map(el => {\r\n            return {\r\n                key: el.id,\r\n                label: el.surname + ' ' + el.name\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Получить массив всех пользователей в формате {key: ..id , label: ..ФИ} кроме себя самого\r\n     * @returns {Array}\r\n     */\r\n    getUserAsKeyLabelNotMyself(id) {\r\n        return !Boolean(id) ? null : this.users.map(el => {\r\n            return {\r\n                key: el.id,\r\n                label: el.surname + ' ' + el.name\r\n            }\r\n        }).filter(el => el.key !== id)\r\n    }\r\n\r\n\r\n\r\n    getUsersByIds(arrId) {\r\n        return this.users\r\n            .filter(el => arrId.indexOf(String(el.id)) !== -1)\r\n            .map(el => {\r\n                return {\r\n                    key: el.id,\r\n                    label: el.surname + ' ' + el.name\r\n                }\r\n            })\r\n    }\r\n\r\n    getUsers() {\r\n        return this.users\r\n    }\r\n\r\n    setUsers(users) {\r\n        this.users = users\r\n    }\r\n}\r\n\r\nexport default new allUser()","import React from 'react'\r\n\r\nclass TextInput extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    myInput = (event) => {\r\n        this.props.updateData(event.target.id, event.target.value)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-sm-2 col-form-label\"><b>{this.props.nameField}</b></label>\r\n                <div className=\"col-sm-10\">\r\n                    <input id={this.props.id} type=\"text\" className=\"form-control\" onChange={this.myInput} defaultValue={this.props.value} />\r\n                    <div className=\"invalid-feedback\">\r\n                        {this.props.invalid}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TextInput","import React from 'react'\r\n\r\nclass SelectList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    listOisitions2 = this.props.positions.map((el) => <option key={el.id} value={el.id}>{el.name}</option>)\r\n\r\n    myInput = (event) => {\r\n        this.props.updateData(event.target.id, Number(event.target.value))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-sm-2 col-form-label\"><b>{this.props.nameField}</b></label>\r\n                <div className=\"col-sm-10\">\r\n                    <select id={this.props.id} className=\"custom-select\" value={this.props.value} onChange={this.myInput} >\r\n                        <option value=\"0\" disabled >Выберите один из вариантов</option>\r\n                        {this.listOisitions2}\r\n                    </select>\r\n                    <div className=\"invalid-feedback\">\r\n                        {this.props.invalid}\r\n                    </div>\r\n                </div>\r\n\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default SelectList","import React from 'react'\r\n\r\nclass DateInput extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    myInput = (event) => {\r\n        this.props.updateData(event.target.id, event.target.value)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-sm-2 col-form-label\"><b>{this.props.nameField}</b></label>\r\n                <div className=\"col-sm-10\">\r\n                    <input id={this.props.id} type=\"date\" className=\"form-control\" onChange={this.myInput} value={this.props.value} />\r\n                    <div className=\"invalid-feedback\">\r\n                        {this.props.invalid}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DateInput","import React from 'react'\r\n\r\nclass RadioInput extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    myInput = (event) => {\r\n        this.props.updateData(event.target.name, event.target.value)\r\n    }\r\n\r\n    render() {\r\n        const listOisitions = this.props.gender.map((el) => {\r\n            return (\r\n                <div className=\"form-check\" key={el.name}>\r\n                    <input type=\"radio\" className=\"form-check-input\" id={el.nameEng} name=\"gender\" checked={el.id === Number(this.props.defaultValue)} value={el.id} onChange={this.myInput} />\r\n                    <label className=\"form-check-label\" name=\"gender\" htmlFor={el.nameEng} >{el.name}</label>\r\n                </div >\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-sm-2 col-form-label\"><b>{this.props.nameField}</b></label>\r\n                <div className=\"col-sm-10\" >\r\n                    <div id={this.props.id}>\r\n                        {listOisitions}\r\n                    </div>\r\n                    <div className=\"invalid-feedback\">\r\n                        {this.props.invalid}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RadioInput","import React from 'react'\r\n\r\nclass CheckInput extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {}\r\n    }\r\n\r\n    myInput = (event) => {\r\n        this.props.updateData(event.target.id, event.target.checked)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-sm-2 col-form-label\"><b>{this.props.nameField}</b></label>\r\n                <div className=\"col-sm-10\">\r\n                    <div className=\"form-check\">\r\n                        <input id={this.props.id} className=\"form-check-input\" type=\"checkbox\" checked={this.props.defaultValue} onChange={this.myInput} />\r\n                        <label className=\"form-check-label\" htmlFor=\"drivingLicence\">Наличие прав</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CheckInput\r\n","import React from 'react'\r\nimport DropdownMultiselect from 'react-multiselect-dropdown-bootstrap'\r\n\r\nclass MultiSelectCheckbox extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    myInput = (event) => {\r\n        this.props.updateData(this.props.id, event)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-sm-2 col-form-label\"><b>{this.props.nameField}</b></label>\r\n                <div className=\"col-sm-10\">\r\n\r\n                    <DropdownMultiselect\r\n                        placeholder={this.props.placeholder}\r\n                        selectDeselectLabel={this.props.selectDeselectLabel}\r\n                        options={this.props.options}\r\n                        selected={this.props.selected}\r\n                        name={this.props.name}\r\n                        buttonClass=\"custom-select\"\r\n                        handleOnChange={this.myInput} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MultiSelectCheckbox\r\n","import React from 'react'\r\n\r\nimport { positions, gender } from '../dictionary'\r\nimport allUser from '../storeMobx/allUser.js'\r\n\r\nimport TextInput from '../components/TextInput.jsx'\r\nimport SelectList from '../components/SelectList.jsx'\r\nimport DateInput from '../components/DateInput.jsx'\r\nimport RadioInput from '../components/RadioInput.jsx'\r\nimport CheckInput from '../components/CheckInput.jsx'\r\nimport MultiSelectCheckbox from '../components/MultiSelectCheckbox.jsx'\r\n\r\nclass AddUser extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            infoUser: {\r\n                surname: 'Кораблев',\r\n                name: 'Алексей',\r\n                patronymic: 'Васильевич',\r\n                position: 3,\r\n                dateOfBirth: '1997-02-22',\r\n                gender: 1,\r\n                dateEmployment: '2021-04-15',\r\n                dateOfDismissal: '',\r\n                drivingLicence: true,\r\n                colleagues: []\r\n\r\n            },\r\n            infoUser2: {\r\n                surname: '',\r\n                name: '',\r\n                patronymic: '',\r\n                position: 0,\r\n                dateOfBirth: '',\r\n                gender: 1,\r\n                dateEmployment: '',\r\n                dateOfDismissal: '',\r\n                drivingLicence: true,\r\n                colleagues: []\r\n            }\r\n        }\r\n    }\r\n\r\n    createNewId(array) {\r\n        let isGoodId = false\r\n        let newId\r\n        while (!isGoodId) {\r\n            newId = Math.round(Math.random() * 1000000)\r\n            let count = 0\r\n            for (let i = 0; i < array.length; i++) {\r\n                if (array[i].id === newId) count++\r\n            }\r\n            isGoodId = count === 0 ? true : false\r\n        }\r\n        return newId\r\n    };\r\n\r\n    insertUser = () => {\r\n        document.querySelectorAll('.is-invalid').forEach(n => n.classList.remove('is-invalid'))\r\n        if (!this.validateFields()) return\r\n\r\n        allUser.insertUser(this.state.infoUser)\r\n        this.props.history.push(\"/\")\r\n    }\r\n\r\n    // Валидация полей\r\n    validateFields() {\r\n        let isGood = true\r\n        isGood &= this.validateName(\"name\")\r\n        isGood &= this.validateSurname(\"surname\")\r\n        isGood &= this.validatePosition(\"position\")\r\n        isGood &= this.validateDateOfBirth(\"dateOfBirth\")\r\n        isGood &= this.validateGender(\"gender\")\r\n        isGood &= this.validateDateEmployment(\"dateEmployment\")\r\n        isGood &= this.validateDateOfDismissal(\"dateOfDismissal\")\r\n        return isGood\r\n    }\r\n    validateName(id) {\r\n        if (!Boolean(this.state.infoUser.name)) {\r\n            this.setIsInvalid(id)\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n    validateSurname(id) {\r\n        if (!Boolean(this.state.infoUser.surname)) {\r\n            this.setIsInvalid(id)\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n    validatePosition(id) {\r\n        if (!Boolean(this.state.infoUser.position)) {\r\n            this.setIsInvalid(id)\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n    validateDateOfBirth(id) {\r\n        if (!Boolean(this.state.infoUser.dateOfBirth)) {\r\n            this.setIsInvalid(id)\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n    validateGender(id) {\r\n        if (!Boolean(this.state.infoUser.gender)) {\r\n            this.setIsInvalid(id)\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n    validateDateEmployment(id) {\r\n        if (!Boolean(this.state.infoUser.dateEmployment)) {\r\n            this.setIsInvalid(id)\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n    validateDateOfDismissal(id) {\r\n        if (!Boolean(this.state.infoUser.dateOfDismissal)) {\r\n            return true\r\n        }\r\n        else if (this.state.infoUser.dateOfDismissal < this.state.infoUser.dateEmployment) {\r\n            this.setIsInvalid(id)\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n    setIsInvalid(id) {\r\n        document.getElementById(id).classList.add('is-invalid')\r\n    }\r\n\r\n    // Обновление state\r\n    updateData = (name, value) => {\r\n        this.setState(prevState => ({\r\n            infoUser: {\r\n                ...prevState.infoUser,\r\n                [name]: value\r\n            }\r\n        }))\r\n    }\r\n\r\n    // Генерация уникального ID для пользователя\r\n    setInfoUserId() {\r\n        this.setState(prevState => ({\r\n            infoUser: {\r\n                ...prevState.infoUser,\r\n                id: this.createNewId(allUser.users)\r\n            }\r\n        }))\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setInfoUserId()\r\n    }\r\n\r\n    render() {\r\n        const colleagues = allUser.getUserAsKeyLabel()\r\n\r\n        return (\r\n            <div className=\"container mt-2\">\r\n                <div className=\"h3 mb-3 text-center\">Добавление нового пользователя</div>\r\n                <TextInput id=\"name\" nameField=\"Имя*\" value={this.state.infoUser.name} updateData={this.updateData} invalid=\"Введите имя\" />\r\n                <TextInput id=\"surname\" nameField=\"Фамилия*\" value={this.state.infoUser.surname} updateData={this.updateData} invalid=\"Введите фимилию\" />\r\n                <TextInput id=\"patronymic\" nameField=\"Отчество\" value={this.state.infoUser.patronymic} updateData={this.updateData} />\r\n                <SelectList id=\"position\" nameField=\"Должность*\" positions={positions} value={this.state.infoUser.position} updateData={this.updateData} invalid=\"Выберите должность\" />\r\n                <DateInput id=\"dateOfBirth\" nameField=\"Дата рождения*\" value={this.state.infoUser.dateOfBirth} updateData={this.updateData} invalid=\"Укажите дату рождения\" />\r\n                <RadioInput id=\"gender\" nameField=\"Пол *\" gender={gender} value={this.state.infoUser.gender} defaultValue={this.state.infoUser.gender} updateData={this.updateData} invalid=\"Укажите пол\" />\r\n                <DateInput id=\"dateEmployment\" nameField=\"Дата приема на работу*\" value={this.state.infoUser.dateEmployment} updateData={this.updateData} invalid=\"Укажите дату приема на работу\" />\r\n                <DateInput id=\"dateOfDismissal\" nameField=\"Дата увольнения\" value={this.state.infoUser.dateOfDismissal} updateData={this.updateData} invalid=\"Дата увольнения не может быть меньше даты приема на работу\" />\r\n                <CheckInput id=\"drivingLicence\" nameField=\"Наличие водительских прав\" value={this.state.infoUser.drivingLicence} defaultValue={this.state.infoUser.drivingLicence} updateData={this.updateData} />\r\n                <MultiSelectCheckbox id=\"colleagues\" nameField=\"Коллеги\" options={colleagues} placeholder=\"Нет коллег\" selectDeselectLabel=\"Выбрать/убрать всех сотрудников\" selected={[]} name=\"сolleagues\" updateData={this.updateData} />\r\n\r\n                <button type=\"button\" className=\"btn btn-success\" onClick={this.insertUser}>Добавить</button>\r\n                <button type=\"button\" className=\"btn btn-secondary\" onClick={() => this.props.history.push(\"/\")}>Назад</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddUser\r\n","import { observer } from 'mobx-react'\r\nimport React from 'react'\r\nimport { getPosinionById, getGenderById } from '../dictionary'\r\nimport allUser from '../storeMobx/allUser.js'\r\n\r\nclass AllUser extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    viewColleagues = (arr) => {\r\n        return allUser.getUsersByIds(arr).map((el) => <div key={el.key}>{el.label}</div>)\r\n    }\r\n\r\n    render() {\r\n        const listOisitions = allUser.users.map((el) =>\r\n            <tr key={el.id}>\r\n                <td>{el.surname}</td>\r\n                <td>{el.name}</td>\r\n                <td>{el.patronymic}</td>\r\n                <td>{getPosinionById(el.position)}</td>\r\n                <td>{el.dateOfBirth}</td>\r\n                <td>{getGenderById(el.gender)}</td>\r\n                <td>{el.dateEmployment}</td>\r\n                <td>{el.dateOfDismissal}</td>\r\n                <td>{this.viewColleagues(el.colleagues)}</td>\r\n                <td>{(el.drivingLicence) ? \"Есть\" : \"Нет\"}</td>\r\n                <td>\r\n                    <div className=\"btn-group\" role=\"group\">\r\n                        <button type=\"button\" className=\"btn btn-success\" onClick={() => this.props.history.push(\"/editUser\", { id: (el.id) })}>&#9998;</button>\r\n                        <button type=\"button\" className=\"btn btn-danger\" onClick={() => allUser.delUser(el.id)} >&#128465;</button>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        )\r\n\r\n        return (\r\n            <div className=\"mx-5 overflow-auto\">\r\n                <table className=\"table table-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">Имя</th>\r\n                            <th scope=\"col\">Фамилия</th>\r\n                            <th scope=\"col\">Отчество</th>\r\n                            <th scope=\"col\">Должность</th>\r\n                            <th scope=\"col\">Дата рождения</th>\r\n                            <th scope=\"col\">Пол</th>\r\n                            <th scope=\"col\">Дата приема на работу</th>\r\n                            <th scope=\"col\">Дата увольнения</th>\r\n                            <th scope=\"col\">Коллеги</th>\r\n                            <th scope=\"col\">Наличие водительских прав</th>\r\n                            <th scope=\"col\">Кнопки</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {listOisitions}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default observer(AllUser)\r\n","import React from 'react'\r\n\r\nimport { positions, gender } from '../dictionary'\r\nimport allUser from '../storeMobx/allUser.js'\r\n\r\nimport TextInput from '../components/TextInput.jsx'\r\nimport SelectList from '../components/SelectList.jsx'\r\nimport DateInput from '../components/DateInput.jsx'\r\nimport RadioInput from '../components/RadioInput.jsx'\r\nimport CheckInput from '../components/CheckInput.jsx'\r\nimport MultiSelectCheckbox from '../components/MultiSelectCheckbox.jsx'\r\n\r\n\r\nclass EditUser extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            infoUser: {\r\n                surname: null,\r\n                name: '',\r\n                patronymic: '',\r\n                position: 0,\r\n                dateOfBirth: '',\r\n                gender: 1,\r\n                dateEmployment: '',\r\n                dateOfDismissal: '',\r\n                drivingLicence: true,\r\n                colleagues: [],\r\n                id: null\r\n            }\r\n        }\r\n    }\r\n\r\n    createNewId(array) {\r\n        let isGoodId = false\r\n        let newId\r\n        while (!isGoodId) {\r\n            newId = Math.round(Math.random() * 1000000)\r\n            let count = 0\r\n            for (let i = 0; i < array.length; i++) {\r\n                if (array[i].id === newId) count++\r\n            }\r\n            isGoodId = count === 0 ? true : false\r\n        }\r\n        return newId\r\n    }\r\n\r\n    // Валидация полей\r\n    validateFields() {\r\n        let isGood = true\r\n        isGood &= this.validateName(\"name\")\r\n        isGood &= this.validateSurname(\"surname\")\r\n        isGood &= this.validatePosition(\"position\")\r\n        isGood &= this.validateDateOfBirth(\"dateOfBirth\")\r\n        isGood &= this.validateGender(\"gender\")\r\n        isGood &= this.validateDateEmployment(\"dateEmployment\")\r\n        isGood &= this.validateDateOfDismissal(\"dateOfDismissal\")\r\n        return isGood\r\n    }\r\n    validateName(id) {\r\n        if (!Boolean(this.state.infoUser.name)) {\r\n            this.setIsInvalid(id)\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n    validateSurname(id) {\r\n        if (!Boolean(this.state.infoUser.surname)) {\r\n            this.setIsInvalid(id)\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n    validatePosition(id) {\r\n        if (!Boolean(this.state.infoUser.position)) {\r\n            this.setIsInvalid(id)\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n    validateDateOfBirth(id) {\r\n        if (!Boolean(this.state.infoUser.dateOfBirth)) {\r\n            this.setIsInvalid(id)\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n    validateGender(id) {\r\n        if (!Boolean(this.state.infoUser.gender)) {\r\n            this.setIsInvalid(id)\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n    validateDateEmployment(id) {\r\n        if (!Boolean(this.state.infoUser.dateEmployment)) {\r\n            this.setIsInvalid(id)\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n    validateDateOfDismissal(id) {\r\n        if (!Boolean(this.state.infoUser.dateOfDismissal)) {\r\n            return true\r\n        }\r\n        else if (this.state.infoUser.dateOfDismissal < this.state.infoUser.dateEmployment) {\r\n            this.setIsInvalid(id)\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n    setIsInvalid(id) {\r\n        document.getElementById(id).classList.add('is-invalid')\r\n    }\r\n\r\n    // Обновление state\r\n    updateData = (name, value) => {\r\n        this.setState(prevState => ({\r\n            infoUser: {\r\n                ...prevState.infoUser,\r\n                [name]: value\r\n            }\r\n        }))\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!Boolean(this.props.location.state)) { this.props.history.push(\"/404\"); return }\r\n        this.setState({ infoUser: allUser.getUserById(this.props.location.state.id) })\r\n    }\r\n\r\n    updateUser = () => {\r\n        document.querySelectorAll('.is-invalid').forEach(n => n.classList.remove('is-invalid'))\r\n        if (!this.validateFields()) return\r\n\r\n        allUser.updateUser(this.state.infoUser)\r\n        this.props.history.push(\"/\")\r\n    }\r\n\r\n    render() {\r\n        let colleagues = allUser.getUserAsKeyLabelNotMyself(this.state.infoUser.id)\r\n        let multiSelect = !Boolean(colleagues) ? 'tyt' : <MultiSelectCheckbox id=\"colleagues\" nameField=\"Коллеги\" options={colleagues} placeholder=\"Нет коллег\" selectDeselectLabel=\"Выбрать/убрать всех сотрудников\" selected={this.state.infoUser.colleagues} name=\"сolleaguess\" updateData={this.updateData} />\r\n\r\n        return (\r\n            <div className=\"container mt-2\" >\r\n                <div className=\"h3 mb-3 text-center\">Редактирование пользователя</div>\r\n                <TextInput id=\"name\" nameField=\"Имя*\" value={this.state.infoUser.name} updateData={this.updateData} invalid=\"Введите имя\" />\r\n                <TextInput id=\"surname\" nameField=\"Фамилия*\" value={this.state.infoUser.surname} updateData={this.updateData} invalid=\"Введите фимилию\" />\r\n                <TextInput id=\"patronymic\" nameField=\"Отчество\" value={this.state.infoUser.patronymic} updateData={this.updateData} invalid=\"\" />\r\n                <SelectList id=\"position\" nameField=\"Должность*\" positions={positions} value={this.state.infoUser.position} updateData={this.updateData} invalid=\"Выберите должность\" />\r\n                <DateInput id=\"dateOfBirth\" nameField=\"Дата рождения*\" value={this.state.infoUser.dateOfBirth} updateData={this.updateData} invalid=\"Укажите дату рождения\" />\r\n                <RadioInput id=\"gender\" nameField=\"Пол *\" gender={gender} value={this.state.infoUser.gender} defaultValue={this.state.infoUser.gender} updateData={this.updateData} invalid=\"Укажите пол\" />\r\n                <DateInput id=\"dateEmployment\" nameField=\"Дата приема на работу*\" value={this.state.infoUser.dateEmployment} updateData={this.updateData} invalid=\"Укажите дату приема на работу\" />\r\n                <DateInput id=\"dateOfDismissal\" nameField=\"Дата увольнения\" value={this.state.infoUser.dateOfDismissal} updateData={this.updateData} invalid=\"Дата увольнения не может быть меньше даты приема на работу\" />\r\n                <CheckInput id=\"drivingLicence\" nameField=\"Наличие водительских прав\" value={this.state.infoUser.drivingLicence} defaultValue={this.state.infoUser.drivingLicence} updateData={this.updateData} invalid=\"\" />\r\n                { multiSelect}\r\n\r\n                <button type=\"button\" className=\"btn btn-success\" onClick={this.updateUser} > Изменить</button>\r\n                <button type=\"button\" className=\"btn btn-secondary\" onClick={() => this.props.history.push(\"/\")}>Назад</button>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditUser\r\n\r\n","import React from 'react'\r\n\r\nclass CheckInput extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"mt-2\">\r\n                <div className=\"alert alert-danger \">\r\n                    <div className=\"text-center\">Страница не найдена</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CheckInput\r\n","import React from 'react'\nimport { HashRouter as Router, Switch, Route, Link } from \"react-router-dom\"\n\nimport AddUser from './pages/AddUser.jsx'\nimport AllUser from './pages/AllUser.jsx'\nimport EditUser from './pages/EditUser.jsx'\nimport Page404 from './pages/Page404.jsx'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Router>\n          <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <Link to=\"/\" className=\"navbar-brand\">Пользователи</Link>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\n              <span className=\"navbar-toggler-icon\"></span>\n            </button>\n\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n              <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item active\">\n                  <Link to=\"/addUser\" className=\"nav-link\">Добавить пользователя</Link>\n                </li>\n              </ul>\n            </div>\n          </nav>\n          <div>\n            <Switch>\n              <Route exact path=\"/\" component={AllUser} />\n              <Route exact path=\"/addUser\" component={AddUser} />\n              <Route exact path=\"/editUser\" component={EditUser} />\n              <Route component={Page404} />\n            </Switch>\n          </div>\n        </Router>\n      </div>\n    )\n  }\n}\n\nexport default App\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App.jsx'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nreportWebVitals()\n"],"sourceRoot":""}